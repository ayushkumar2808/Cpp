#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int countIslands(vector<int> adj[], int n) {
    vector<int> vis(n, 0);
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (vis[i] == 0) {
            count++;
            queue<int> q;
            q.push(i);
            vis[i] = 1;
            while (!q.empty()) {
                int node = q.front();
                q.pop();
                for (auto it : adj[node]) {
                    if (vis[it] == 0) {
                        vis[it] = 1;
                        q.push(it);
                    }
                }
            }
        }
    }
    return count;
}

int main() {
    int n, m;
    cin >> n >> m;
    vector<int> adj[n];
    for (int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        adj[u - 1].push_back(v - 1); // Adjust for 0-based indexing
        adj[v - 1].push_back(u - 1);
    }
    cout << countIslands(adj, n) << endl;
    return 0;
}
